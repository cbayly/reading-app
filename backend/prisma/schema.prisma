generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Parent {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  passwordHash String    @map("password_hash")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  
  // Relations
  students     Student[]
  
  @@map("parents")
}

model Student {
  id         Int      @id @default(autoincrement())
  parentId   Int      @map("parent_id")
  name       String
  birthday   DateTime
  gradeLevel Int      @map("grade_level")
  interests  String  // Comma-separated values (e.g., "sports,reading,music")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  
  // Relations
  parent      Parent       @relation(fields: [parentId], references: [id], onDelete: Cascade)
  assessments Assessment[]
  
  @@map("students")
}

model Assessment {
  id                Int      @id @default(autoincrement())
  studentId         Int      @map("student_id")
  status            String   @default("not_started") // not_started, in_progress, completed, abandoned
  passage           String?
  questions         Json?
  studentAnswers    Json?    @map("student_answers")
  readingTime       Int?     @map("reading_time")
  errorCount        Int?     @map("error_count")
  wpm               Float?
  accuracy          Float?
  compositeScore    Float?   @map("composite_score")
  fluencyScore      Float?   @map("fluency_score")
  compVocabScore    Float?   @map("comp_vocab_score")
  readingLevelLabel String?  @map("reading_level_label")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  
  // Relations
  student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  
  @@map("assessments")
}

model Benchmark {
  id    Int @id @default(autoincrement())
  grade Int @unique
  wpm   Int
  
  @@map("benchmarks")
}